from pyramid.config import Configurator
from pyramid.events import BeforeRender
from pyramid_zodbconn import get_connection
from .models import appmaker
from .subscribers import register_api

def root_factory(request):
    conn = get_connection(request)
    return appmaker(conn.root())


def main(global_config, **settings):
    """ This function returns a Pyramid WSGI application.
    """
    config = Configurator(root_factory=root_factory, settings=settings)

    # Includes for any packages that hook into configuration.
    config.include('pyramid_tm')
    config.include('pyramid_zodbconn')
#if $include_debug_bar
    config.include('pyramid_debugtoolbar')
#end if

    \# Extending an existing package allows you to override
    \# view mappings and other configuration details.
#if $extends_package
    config.include('$extends_package')
#else
    \# config.include('base_package_name')
#end if

    \# overriding templates should be done as follows:

    \# config.override_asset('base_package_name:templates/base.pt',
    \#                       '${$package_name}:templates/override.pt')

    \# Add renderer subscribers.
    config.add_subscriber(register_api, BeforeRender)

    # Configuring URLs
    config.add_static_view('static', 'static', cache_max_age=3600)
    config.scan()

    return config.make_wsgi_app()
